.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Captcha::AreYouAHuman 3pm"
.TH Captcha::AreYouAHuman 3pm "2011-12-05" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Captcha::AreYouAHuman \- Integrate the AreYouAHuman.com CAPTCHA alternative
human verification into your Perl application
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Captcha::AreYouAHuman;
\&
\&    my $publisher_key = "BAADBEEFBAADBEEF";
\&    my $scoring_key = "BEEFBEEFBEEFBEEF";
\&
\&    my $ayah = new Captcha::AreYouAHuman(
\&            "publisher_key" => $publisher_key,
\&            "scoring_key" => $scoring_key
\&    );
\&
\&    # output a form
\&    print $ayah\->getPublisherHTML();
\&
\&    # score the result;
\&    use CGI;
\&    my $cgi = new CGI;
\&    my $result = $ayah\->scoreResult(
\&            "session_secret" => $cgi\->param(\*(Aqsession_secret\*(Aq),
\&            "client_ip" => $cgi\->remote_host()
\&    );
\&
\&    if ($result) {
\&        print "You\*(Aqre a human!\en";
\&    } else {
\&        print "Not a human\en":
\&    }
\&
\&    # eecho a hidden iframe for conversion tracking
\&    print $ayah\->recordConversion(
\&            "session_secret" => $cgi\->param(\*(Aqsession_secret\*(Aq)
\&    );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1CAPTCHA\s0's suck. Are You a Human's PlayThru is a \s-1CAPTCHA\s0 alternative 
that replaces the twisted, distorted text with games.
.PP
PlayThru replaces the awful user experience of normal CAPTCHAs with 
short and simple games. They are easy for your users and difficult 
for bots to break.
.PP
Are You a Human's PlayThru provides security for your site's comments 
and registration sections. It is easy to install and difficult for 
spammers to circumvent. We collect lots of data about how a visitor 
plays our game, which we feed into our algorithm to continuously 
improve our security. Please learn more about PlayThru at the 
Are You a Human website.
.PP
Installing PlayThru requires a Publisher Key, which can be acquired 
from the Are You a Human publisher portal. To get your publisher key, 
please create an account on our registration page.
.PP
We love feedback and would like to hear from you. Please leave us 
some on our support forum. We also like to get some shout outs on 
our Facebook page.
.PP
Thank you and fight bots with fun!
.PP
<http://areyouahuman.com>
.SH "INTERFACE"
.IX Header "INTERFACE"
.ie n .IP """new""" 4
.el .IP "\f(CWnew\fR" 4
.IX Item "new"
Arguments: \f(CW%params\fR
.Sp
Create a new \f(CW\*(C`Captcha::AreYouAHuman\*(C'\fR object.
.RS 4
.ie n .IP """server""" 4
.el .IP "\f(CWserver\fR" 4
.IX Item "server"
Sets the server name to use; if not specified, 
defaults to ws.areyouahuman.com.
.ie n .IP """publisher_key""" 4
.el .IP "\f(CWpublisher_key\fR" 4
.IX Item "publisher_key"
(Required) Publisher key as provided by the areyouahuman.com portal
when you register a domain.
.ie n .IP """scoring_key""" 4
.el .IP "\f(CWscoring_key\fR" 4
.IX Item "scoring_key"
(Required) Scoring key as provided by the areyouahuman.com portal
when you register a domain.
.RE
.RS 4
.RE
.ie n .IP """getPublisherHTML""" 4
.el .IP "\f(CWgetPublisherHTML\fR" 4
.IX Item "getPublisherHTML"
Returns \s-1HTML\s0 to be output to browser.
.ie n .IP """scoreResult""" 4
.el .IP "\f(CWscoreResult\fR" 4
.IX Item "scoreResult"
Arguments: \f(CW%params\fR
.Sp
Scores a game play; returns true on pass, false otherwise.
.RS 4
.ie n .IP """session_secret""" 4
.el .IP "\f(CWsession_secret\fR" 4
.IX Item "session_secret"
(Required) The value of the form input \fI<session_secret\fR>
.ie n .IP """client_ip""" 4
.el .IP "\f(CWclient_ip\fR" 4
.IX Item "client_ip"
(Required) The remote client \s-1IP\s0.
.RE
.RS 4
.RE
.ie n .IP """recordConversion""" 4
.el .IP "\f(CWrecordConversion\fR" 4
.IX Item "recordConversion"
Arguments: \f(CW%params\fR
.Sp
Returns \s-1HTML\s0 for display to the client to record a conversion.
.RS 4
.ie n .IP """session_secret""" 4
.el .IP "\f(CWsession_secret\fR" 4
.IX Item "session_secret"
(Required) The value of the form input \fI<session_secret\fR>
.RE
.RS 4
.RE
.ie n .IP """errorLog""" 4
.el .IP "\f(CWerrorLog\fR" 4
.IX Item "errorLog"
Arguments: \f(CW$string\fR to record to the error log
.Sp
Handles an error log; for default, it will send to \s-1STDERR\s0.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
To use Are You a Human, sign up as a publisher here:
.PP
<http://areyouahuman.com>
.PP
Once you register your domain, you will receive a publisher key
and a scoring key.  Pass these as parameters to the constructor.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jonathan Brown \f(CW\*(C`<jonathan@areyouahuman.com>\*(C'\fR
.PP
Heavily based on the Captcha::PeopleSign Perl library by 
Michele Beltrame.
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2011 AreYouAHuman.com
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl 5 itself. See perlartistic.
